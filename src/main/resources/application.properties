server.port=8086
#logging
#currently we use sl4j,Sentry is a better choice,if we want to realtime log
#TRACE, DEBUG, INFO, WARN, ERROR, FATAL, OFF
logging.level.org.springframework.web=ERROR
logging.level.org.hibernate=ERROR
logging.path=logs/
logging.level.root=warn
logging.file=xiangqin.log
#logging.config= # location of config file (default classpath:logback.xml for logback)  

spring.freemarker.template-loader-path=classpath:/templates/view/
spring.freemarker.cache=false
spring.freemarker.charset=UTF-8
spring.freemarker.check-template-location=true
spring.freemarker.content-type=text/html
spring.freemarker.expose-request-attributes=true
spring.freemarker.expose-session-attributes=true
spring.freemarker.request-context-attribute=request
spring.freemarker.suffix=.html

#spring data source config
spring.datasource.url=jdbc:mysql://localhost:3306/xiangqin?useUnicode=true&characterEncoding=utf8&useSSL=false
spring.datasource.username=root
spring.datasource.password=root123
spring.datasource.driver-class-name=com.mysql.jdbc.Driver

spring.datasource.initialsize=10
# Number of ms to wait before throwing an exception if no connection is available.
spring.datasource.max-wait=10
# Maximum number of active connections that can be allocated from this pool at the same time.
spring.datasource.max-active=50
# Validate the connection before borrowing it from the pool.
spring.datasource.test-on-borrow=true

# Specify the DBMS
spring.jpa.database = MYSQL
spring.jpa.database-platform = org.hibernate.dialect.MySQL5Dialect
# Show or not log for each sql query
spring.jpa.show-sql = true
# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update
# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
# stripped before adding them to the entity manager)
spring.jpa.properties.hibernate.dialect =org.hibernate.dialect.MySQL5Dialect
spring.jpa.open-in-view=false

#endpoints
#endpoints.sensitive=true
#endpoints.info.sensitive=false


spring.redis.database=0
spring.redis.host=127.0.0.1
spring.redis.password=
spring.redis.port=6379
spring.redis.pool.max-active=8
spring.redis.pool.max-idle=8
spring.redis.pool.max-wait=-1
spring.redis.pool.min-idle=0
spring.redis.minIdle=20
# 最大空闲连接数
spring.redis.maxIdle=40
# 最大连接数
spring.redis.maxTotal=100
# 获取连接时的最大等待毫秒数,小于零:阻塞不确定的时间,默认-1
spring.redis.maxWaitMillis=1500
# 在获取连接的时候检查有效性, 默认false
spring.redis.testOnBorrow=false
# 每次释放连接的最大数目
spring.redis.numTestsPerEvictionRun=1024
# 释放连接的扫描间隔（毫秒）
spring.redis.timeBetweenEvictionRunsMillis=1000
# 连接最小空闲时间
spring.redis.minEvictableIdleTimeMillis=3000
# 连接空闲多久后释放, 当空闲时间>该值 且 空闲连接>最大空闲连接数 时直接释放
spring.redis.softMinEvictableIdleTimeMillis=1000
# 在空闲时检查有效性, 默认false
spring.redis.testWhileIdle=false
# 连接耗尽时是否阻塞, false报异常,ture阻塞直到超时, 默认true
spring.redis.blockWhenExhausted=true

info.build.artifact=com.xiangqin
info.build.name=xiangqin
info.build.description=xiangqin description
info.build.version=version-1.0

